<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo＋GitHub pages 个人博客搭建教程</title>
    <link href="/2024/12/04/Hexo%EF%BC%8BGitHub-pages-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2024/12/04/Hexo%EF%BC%8BGitHub-pages-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Hexo＋GitHub-pages-个人博客搭建全流程"><a href="#Hexo＋GitHub-pages-个人博客搭建全流程" class="headerlink" title="Hexo＋GitHub pages 个人博客搭建全流程"></a>Hexo＋GitHub pages 个人博客搭建全流程</h1><p>[TOC]</p><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1-1-GitHub账号"><a href="#1-1-GitHub账号" class="headerlink" title="1.1 GitHub账号"></a>1.1 GitHub账号</h3><p>注册一个GitHub账号，已有忽略该步</p><h3 id="1-2-git配置"><a href="#1-2-git配置" class="headerlink" title="1.2 git配置"></a>1.2 git配置</h3><p>找个教程安装git即可</p><h3 id="1-3-nodejs配置"><a href="#1-3-nodejs配置" class="headerlink" title="1.3 nodejs配置"></a>1.3 nodejs配置</h3><p>参考博客3</p><h4 id="1-3-1-下载nodejs"><a href="#1-3-1-下载nodejs" class="headerlink" title="1.3.1 下载nodejs"></a>1.3.1 下载nodejs</h4><p>官方网址: <a href="https://nodejs.org/en">https://nodejs.org/en</a> ,直接下载即可</p><p>一路next，到安装路径这里，可以选择安装在自定义盘，如我安装在D盘：<code>D:\tool\nodejs</code></p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\1.png"></p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\2.png"></p><h4 id="1-3-2-检查是否安装成功"><a href="#1-3-2-检查是否安装成功" class="headerlink" title="1.3.2 检查是否安装成功"></a>1.3.2 检查是否安装成功</h4><p><code>win＋R</code> 打开cmd窗口，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br></code></pre></td></tr></table></figure><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\3.png"></p><h4 id="1-3-3-环境变量配置"><a href="#1-3-3-环境变量配置" class="headerlink" title="1.3.3 环境变量配置"></a>1.3.3 环境变量配置</h4><p>在安装的目录下新建两个文件夹：<span style="background:#fbd4d0;color:red">node_global</span>和<span style="background:#fbd4d0;color:red">node_cache</span>，注意新建的时候，这两个文件需要管理者权限，正常继续就可以<br><img src="D:\project\github_myblog_project\hexo-blog\source_posts\4.png"></p><p>在cmd窗口中执行以下命令：注意修改成自己的目录路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set prefix &quot;D:\tool\nodejs\node_global&quot;<br>npm config set cache &quot;D:\tool\nodejs\node_cache&quot;<br></code></pre></td></tr></table></figure><p>修改环境变量<span style="background:#fbd4d0;color:red">path</span>，添加<span style="background:#fbd4d0;color:red">node_global</span>路径</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\5.png"></p><p>新建系统变量<span style="background:#fbd4d0;color:red">NODE_PATH</span></p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\6.png"></p><h2 id="二、新建一个GitHub-page网页"><a href="#二、新建一个GitHub-page网页" class="headerlink" title="二、新建一个GitHub page网页"></a>二、新建一个GitHub page网页</h2><p>打开GitHub，进入到个人仓库中</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\7.png"></p><p>新建一个仓库，仓库名即为个人博客网址：<span style="background:#fbd4d0;color:red">&lt;用户名&gt;.github.io</span>，然后点击Create repository</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\8.png"></p><p>点击<code>creating a new file</code>创建一个新文件，作为网站的主页。</p><p>新文件的名字必须为<code>index.html</code>，内容先随便写一个简单的，内容示例如下，填写之后点击<code>Commit new file</code>提交。</p><p>浏览器中访问<span style="background:#fbd4d0;color:red">&lt;用户名&gt;.github.io</span>，如果在可以正常显示即成功。</p><h2 id="三、hexo网页搭建debug记录"><a href="#三、hexo网页搭建debug记录" class="headerlink" title="三、hexo网页搭建debug记录"></a>三、hexo网页搭建debug记录</h2><p>按照参考博客1流程走就可以，这里主要记录出现的bug以及解决方法</p><h3 id="3-1-执行npm-install命令的时候，显示error，出现npm-ERR-code-EPERM-npm-ERR-syscall-mkdir-npm-ERR-path-B-nodejs-node-global-cacache报错"><a href="#3-1-执行npm-install命令的时候，显示error，出现npm-ERR-code-EPERM-npm-ERR-syscall-mkdir-npm-ERR-path-B-nodejs-node-global-cacache报错" class="headerlink" title="3.1 执行npm install命令的时候，显示error，出现npm ERR code EPERM npm ERR syscall mkdir npm ERR path B:\nodejs\node_global_cacache报错"></a>3.1 执行npm install命令的时候，显示error，出现npm ERR code EPERM npm ERR syscall mkdir npm ERR path B:\nodejs\node_global_cacache报错</h3><p>原因：文件权限不够</p><p>解决方法：把1.3.3中新建的node_global和node_cache文件的权限改成完全控制即可</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\9.png"></p><h3 id="3-2-新建测试文章后，博客图片无法在网站上显示"><a href="#3-2-新建测试文章后，博客图片无法在网站上显示" class="headerlink" title="3.2 新建测试文章后，博客图片无法在网站上显示"></a>3.2 新建测试文章后，博客图片无法在网站上显示</h3><p>原因：这个网上的解决办法太多了，我记录一下自己成功的版本，这个方法可以在网站上正常显示，但是在md文档里无法显示</p><p>解决办法：</p><p>修改hexo文件夹中的_config.yml文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">post_asset_folder: true<br>marked:<br>  prependRoot: true<br>  postAsset: true<br></code></pre></td></tr></table></figure><p>把图片放到新建博客的对应资源文件夹下，如命名为：test.png</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\10.png"></p><h3 id="3-3-配置网站统计功能时，报错INFO-Validating-config-INFO-Start-processing-ERROR-Theme-config-load-failed-ERROR-Process-failed-config-yml-YAMLException-bad-indentation-of-a-mapping-entry-277-5-274-REST-API-服务器地址，国际版不填-276-Only-the-Chinese-mainland-use-…-277-server-url-———–-278-统计页面时获取路径的属性-279-Get-the-attribute-of-the-page-…"><a href="#3-3-配置网站统计功能时，报错INFO-Validating-config-INFO-Start-processing-ERROR-Theme-config-load-failed-ERROR-Process-failed-config-yml-YAMLException-bad-indentation-of-a-mapping-entry-277-5-274-REST-API-服务器地址，国际版不填-276-Only-the-Chinese-mainland-use-…-277-server-url-———–-278-统计页面时获取路径的属性-279-Get-the-attribute-of-the-page-…" class="headerlink" title="3.3 配置网站统计功能时，报错INFO Validating config INFO Start processing ERROR Theme config load failed. ERROR Process failed: _config.yml YAMLException: bad indentation of a mapping entry (277:5) 274 |  # REST API 服务器地址，国际版不填 276 | # Only the Chinese mainland use … 277 | server_url: ———–^ 278 | # 统计页面时获取路径的属性 279 | # Get the attribute of the page …"></a>3.3 配置网站统计功能时，报错INFO Validating config INFO Start processing ERROR Theme config load failed. ERROR Process failed: _config.yml YAMLException: bad indentation of a mapping entry (277:5) 274 |  # REST API 服务器地址，国际版不填 276 | # Only the Chinese mainland use … 277 | server_url: ———–^ 278 | # 统计页面时获取路径的属性 279 | # Get the attribute of the page …</h3><p>原因：不能只修改参考博客1中的红框部分，还有别的需要修改</p><p>解决方法：参考官方文档：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93">https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93</a></p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\11.png"></p><h3 id="3-4-按照参考博客1安装流程后，页面统计功能不显示"><a href="#3-4-按照参考博客1安装流程后，页面统计功能不显示" class="headerlink" title="3.4 按照参考博客1安装流程后，页面统计功能不显示"></a>3.4 按照参考博客1安装流程后，页面统计功能不显示</h3><p>原因：只修改了教程中的红框部分</p><p>解决办法：严格对比教程中所有的不同部分，然后按照参考博客2中的官方教程进行修改</p><h3 id="3-5-发布到GitHub-Pages中时不成功，hexo-d命令报错-ERROR-Deployer-not-found-git"><a href="#3-5-发布到GitHub-Pages中时不成功，hexo-d命令报错-ERROR-Deployer-not-found-git" class="headerlink" title="3.5 发布到GitHub Pages中时不成功，hexo d命令报错 ERROR Deployer not found: git"></a>3.5 发布到GitHub Pages中时不成功，hexo d命令报错 ERROR Deployer not found: git</h3><p>原因：按照发布方式1部署后，部署失败，将hexo-deployer-git安装到了错误路径</p><p>解决方法：打开cmd窗口后，不能直接执行以下命令，要cd到hexo-blog</p><p><img src="D:\project\github_myblog_project\hexo-blog\source_posts\12.png"></p><h2 id="四、参考链接"><a href="#四、参考链接" class="headerlink" title="四、参考链接"></a>四、参考链接</h2><p>参考博客1_GitHub博客搭建教程：<a href="https://blog.csdn.net/yaorongke/article/details/119089190?spm=1001.2014.3001.5506">https://blog.csdn.net/yaorongke/article/details/119089190?spm=1001.2014.3001.5506</a> </p><p>参考博客2_Hexo Fluid 用户手册：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93">https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93</a> </p><p>参考博客3_nodejs安装教程：<a href="https://blog.csdn.net/yaorongke/article/details/119084295">https://blog.csdn.net/yaorongke/article/details/119084295</a> </p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>GitHub page</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo＋GitHub pages 个人博客搭建全流程</title>
    <link href="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo＋GitHub-pages-个人博客搭建全流程"><a href="#Hexo＋GitHub-pages-个人博客搭建全流程" class="headerlink" title="Hexo＋GitHub pages 个人博客搭建全流程"></a>Hexo＋GitHub pages 个人博客搭建全流程</h1><p>[TOC]</p><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1-1-GitHub账号"><a href="#1-1-GitHub账号" class="headerlink" title="1.1 GitHub账号"></a>1.1 GitHub账号</h3><p>注册一个GitHub账号，已有忽略该步</p><h3 id="1-2-git配置"><a href="#1-2-git配置" class="headerlink" title="1.2 git配置"></a>1.2 git配置</h3><p>找个教程安装git即可</p><h3 id="1-3-nodejs配置"><a href="#1-3-nodejs配置" class="headerlink" title="1.3 nodejs配置"></a>1.3 nodejs配置</h3><p>参考博客3</p><h4 id="1-3-1-下载nodejs"><a href="#1-3-1-下载nodejs" class="headerlink" title="1.3.1 下载nodejs"></a>1.3.1 下载nodejs</h4><p>官方网址: <a href="https://nodejs.org/en">https://nodejs.org/en</a> ,直接下载即可</p><p>一路next，到安装路径这里，可以选择安装在自定义盘，如我安装在D盘：<code>D:\tool\nodejs</code></p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png"></p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.png"></p><h4 id="1-3-2-检查是否安装成功"><a href="#1-3-2-检查是否安装成功" class="headerlink" title="1.3.2 检查是否安装成功"></a>1.3.2 检查是否安装成功</h4><p><code>win＋R</code> 打开cmd窗口，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br></code></pre></td></tr></table></figure><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png"></p><h4 id="1-3-3-环境变量配置"><a href="#1-3-3-环境变量配置" class="headerlink" title="1.3.3 环境变量配置"></a>1.3.3 环境变量配置</h4><p>在安装的目录下新建两个文件夹：<span style="background:#fbd4d0;color:red">node_global</span>和<span style="background:#fbd4d0;color:red">node_cache</span>，注意新建的时候，这两个文件需要管理者权限，正常继续就可以<br><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.png"></p><p>在cmd窗口中执行以下命令：注意修改成自己的目录路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set prefix &quot;D:\tool\nodejs\node_global&quot;<br>npm config set cache &quot;D:\tool\nodejs\node_cache&quot;<br></code></pre></td></tr></table></figure><p>修改环境变量<span style="background:#fbd4d0;color:red">path</span>，添加<span style="background:#fbd4d0;color:red">node_global</span>路径</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.png"></p><p>新建系统变量<span style="background:#fbd4d0;color:red">NODE_PATH</span></p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/6.png"></p><h2 id="二、新建一个GitHub-page网页"><a href="#二、新建一个GitHub-page网页" class="headerlink" title="二、新建一个GitHub page网页"></a>二、新建一个GitHub page网页</h2><p>打开GitHub，进入到个人仓库中</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/7.png"></p><p>新建一个仓库，仓库名即为个人博客网址：<span style="background:#fbd4d0;color:red">&lt;用户名&gt;.github.io</span>，然后点击Create repository</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/8.png"></p><p>点击<code>creating a new file</code>创建一个新文件，作为网站的主页。</p><p>新文件的名字必须为<code>index.html</code>，内容先随便写一个简单的，内容示例如下，填写之后点击<code>Commit new file</code>提交。</p><p>浏览器中访问<span style="background:#fbd4d0;color:red">&lt;用户名&gt;.github.io</span>，如果在可以正常显示即成功。</p><h2 id="三、hexo网页搭建debug记录"><a href="#三、hexo网页搭建debug记录" class="headerlink" title="三、hexo网页搭建debug记录"></a>三、hexo网页搭建debug记录</h2><p>按照参考博客1流程走就可以，这里主要记录出现的bug以及解决方法</p><h3 id="3-1-执行npm-install命令的时候，显示error，出现npm-ERR-code-EPERM-npm-ERR-syscall-mkdir-npm-ERR-path-B-nodejs-node-global-cacache报错"><a href="#3-1-执行npm-install命令的时候，显示error，出现npm-ERR-code-EPERM-npm-ERR-syscall-mkdir-npm-ERR-path-B-nodejs-node-global-cacache报错" class="headerlink" title="3.1 执行npm install命令的时候，显示error，出现npm ERR code EPERM npm ERR syscall mkdir npm ERR path B:\nodejs\node_global_cacache报错"></a>3.1 执行npm install命令的时候，显示error，出现npm ERR code EPERM npm ERR syscall mkdir npm ERR path B:\nodejs\node_global_cacache报错</h3><p>原因：文件权限不够</p><p>解决方法：把1.3.3中新建的node_global和node_cache文件的权限改成完全控制即可</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/9.png"></p><h3 id="3-2-新建测试文章后，博客图片无法在网站上显示"><a href="#3-2-新建测试文章后，博客图片无法在网站上显示" class="headerlink" title="3.2 新建测试文章后，博客图片无法在网站上显示"></a>3.2 新建测试文章后，博客图片无法在网站上显示</h3><p>原因：这个网上的解决办法太多了，我记录一下自己成功的版本，这个方法可以在网站上正常显示，但是在md文档里无法显示</p><p>解决办法：</p><p>修改hexo文件夹中的_config.yml文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">post_asset_folder: true<br>marked:<br>  prependRoot: true<br>  postAsset: true<br></code></pre></td></tr></table></figure><p>把图片放到新建博客的对应资源文件夹下，如命名为：test.png</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/10.png"></p><h3 id="3-3-配置网站统计功能时，报错INFO-Validating-config-INFO-Start-processing-ERROR-Theme-config-load-failed-ERROR-Process-failed-config-yml-YAMLException-bad-indentation-of-a-mapping-entry-277-5-274-REST-API-服务器地址，国际版不填-276-Only-the-Chinese-mainland-use-…-277-server-url-———–-278-统计页面时获取路径的属性-279-Get-the-attribute-of-the-page-…"><a href="#3-3-配置网站统计功能时，报错INFO-Validating-config-INFO-Start-processing-ERROR-Theme-config-load-failed-ERROR-Process-failed-config-yml-YAMLException-bad-indentation-of-a-mapping-entry-277-5-274-REST-API-服务器地址，国际版不填-276-Only-the-Chinese-mainland-use-…-277-server-url-———–-278-统计页面时获取路径的属性-279-Get-the-attribute-of-the-page-…" class="headerlink" title="3.3 配置网站统计功能时，报错INFO Validating config INFO Start processing ERROR Theme config load failed. ERROR Process failed: _config.yml YAMLException: bad indentation of a mapping entry (277:5) 274 |  # REST API 服务器地址，国际版不填 276 | # Only the Chinese mainland use … 277 | server_url: ———–^ 278 | # 统计页面时获取路径的属性 279 | # Get the attribute of the page …"></a>3.3 配置网站统计功能时，报错INFO Validating config INFO Start processing ERROR Theme config load failed. ERROR Process failed: _config.yml YAMLException: bad indentation of a mapping entry (277:5) 274 |  # REST API 服务器地址，国际版不填 276 | # Only the Chinese mainland use … 277 | server_url: ———–^ 278 | # 统计页面时获取路径的属性 279 | # Get the attribute of the page …</h3><p>原因：不能只修改参考博客1中的红框部分，还有别的需要修改</p><p>解决方法：参考官方文档：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93">https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93</a></p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/11.png"></p><h3 id="3-4-按照参考博客1安装流程后，页面统计功能不显示"><a href="#3-4-按照参考博客1安装流程后，页面统计功能不显示" class="headerlink" title="3.4 按照参考博客1安装流程后，页面统计功能不显示"></a>3.4 按照参考博客1安装流程后，页面统计功能不显示</h3><p>原因：只修改了教程中的红框部分</p><p>解决办法：严格对比教程中所有的不同部分，然后按照参考博客2中的官方教程进行修改</p><h3 id="3-5-发布到GitHub-Pages中时不成功，hexo-d命令报错-ERROR-Deployer-not-found-git"><a href="#3-5-发布到GitHub-Pages中时不成功，hexo-d命令报错-ERROR-Deployer-not-found-git" class="headerlink" title="3.5 发布到GitHub Pages中时不成功，hexo d命令报错 ERROR Deployer not found: git"></a>3.5 发布到GitHub Pages中时不成功，hexo d命令报错 ERROR Deployer not found: git</h3><p>原因：按照发布方式1部署后，部署失败，将hexo-deployer-git安装到了错误路径</p><p>解决方法：打开cmd窗口后，不能直接执行以下命令，要cd到hexo-blog</p><p><img src="/2024/12/04/Hexo%EF%BC%8BGitHub%20pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/12.png"></p><h2 id="四、参考链接"><a href="#四、参考链接" class="headerlink" title="四、参考链接"></a>四、参考链接</h2><p>参考博客1_GitHub博客搭建教程：<a href="https://blog.csdn.net/yaorongke/article/details/119089190?spm=1001.2014.3001.5506">https://blog.csdn.net/yaorongke/article/details/119089190?spm=1001.2014.3001.5506</a> </p><p>参考博客2_Hexo Fluid 用户手册：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93">https://hexo.fluid-dev.com/docs/guide/#%E5%85%A8%E5%B1%80%E5%AD%97%E4%BD%93</a> </p><p>参考博客3_nodejs安装教程：<a href="https://blog.csdn.net/yaorongke/article/details/119084295">https://blog.csdn.net/yaorongke/article/details/119084295</a> </p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>GitHub page</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/12/04/hello-world/"/>
    <url>/2024/12/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
